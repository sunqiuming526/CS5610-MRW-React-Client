{"version":3,"sources":["logo.svg","reducers/ReducerTypes.js","services/utils.js","services/ImdbService.js","constants/ApiConstants.js","services/articleService.js","components/NavbarComponent.js","components/MovieListComponent.js","components/Login/RegistrationForm/RegistrationForm.js","components/Login/AlertComponent/AlertComponent.js","utils/PrivateRoute.js","services/CommentService.js","components/UserProfile/MyComments.js","services/UserService.js","components/UserProfile/AccountManagement.js","components/MovieCardComponent.js","components/MovieGridComponent.js","components/UserProfile/Watchlist.js","components/UserProfile/EditProfileComponent.js","image/article.png","components/article/ArticleCardComponent.js","components/article/ArticleGridComponent.js","containers/ArticlePageContainer.js","components/UserHomePage.js","components/Login/LoginForm/LoginForm.js","containers/MoviePageContainer.js","components/comment/CurrentCommentsComponent.js","components/comment/PostCommentComponent.js","components/comment/CommentSectionComponent.js","components/movie-details/CastFigureComponent.js","components/movie-details/CastsComponent.js","services/WatchlistService.js","containers/movie-details/MovieDetailsPage.js","components/actor-details/ActorBioComponent.js","components/actor-details/ActorBiographyComponent.js","components/actor-details/ActorCreditComponent.js","components/actor-details/ActorCreditsComponent.js","components/actor-details/ActorPhotosComponent.js","containers/actor-details/ActorDetailsPage.js","containers/ArticleDetails.js","components/ActorGridComponent.js","components/PaginationComponent.js","containers/ActorPageContainer.js","App.js","reportWebVitals.js","reducers/NavbarReducer.js","reducers/MovieReducer.js","reducers/ArticleReducer.js","reducers/ActorReducer.js","index.js"],"names":["FETCH_MOVIES","FETCH_MOVIE","FETCH_ACTOR","FETCH_ACTORS","FIND_ARTICLES_BY_KEYWORD","FETCH_ARTICLES","FETCH_ARTICLES_BY_AUTHOR","FETCH_ARTICLE_BY_ID","ADD_ARTICLE","UPDATE_ARTICLE","DELETE_ARTICLE","ON_CHANGE","actions","SEARCH_KEYWORD","TYPE_KEYWORD","FIND_MOVIES_BY_TITLE","GET_LOGIN_USER","FETCH_ARTICLE","UPDATE_SEARCH_TYPE","IMAGE_SIZE","getPosterFullUrl","size","posterPath","tmdbApiKey","movieID","a","fetch","method","movieRes","json","movie","creditsRes","credits","casts","cast","num","res","payload","results","slice","title","actorID","actorDetailsRes","actorDetails","actorPhotosRes","profiles","console","log","sort","b","vote_average","photos","actorCreditsRes","name","page","escapedName","escape","actorsRes","service","findByTitle","headers","then","response","map","item","id","filter","includes","catch","err","findMoviesByUser","userID","Promise","resolve","fetchPopularMovies","fetchMovieByID","fetchActorByID","fetchMoviesByTitle","findActorsByName","getMovieNameById","movieId","movieDetails","API_BASE_URL","API_USERS_URL","API_COMMENTS_URL","ACCESS_TOKEN_NAME","url","findAllArticles","articleId","userId","newArticle","body","JSON","stringify","keyWord","connect","state","keyword","navBarReducer","loginUser","searchType","dispatch","typeKeyword","type","ReducerTypes","searchMovies","imdbService","movies","ImdbService","getLoginUser","axios","get","token","localStorage","getItem","data","error","findArticlesByTitle","articleService","articles","updateSearchType","location","useLocation","history","useHistory","useState","setSearchType","username","user","setUser","useEffect","status","bg","variant","className","Brand","as","Link","to","_id","InputGroup","Prepend","Dropdown","onSelect","Toggle","Menu","Item","eventKey","FormControl","placeholder","onChange","event","target","value","Button","onClick","push","pathname","removeItem","movieReducer","searchKeyword","withRouter","props","email","password","role","confirmPassword","successMessage","setState","handleChange","e","prevState","redirectToHome","updateTitle","htmlFor","aria-describedby","selected","preventDefault","length","showError","post","setItem","sendDetailsToServer","style","display","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","PrivateRoute","children","rest","render","from","commentService","getCommentsForMovie","addCommentForMovie","newComment","getCommentsForUser","assert","deleteComment","commentId","updateComment","MyComment","comments","setComments","commentMovieMap","setCommentMovieMap","setFlag","curComment","movieName","updateCommentMap","comment","text","updateUser","newUser","updateMultipleUsers","userList","option","updateList","all","userService","AccountManagement","users","setUsers","updatedUser","MovieCardComponent","rating","posterUrl","releaseYear","Card","border","Img","src","Body","Title","Subtitle","MovieGridComponent","Container","fluid","Row","poster_path","release_date","Col","xl","lg","md","sm","xs","Watchlist","setMovies","movieList","promises","watchlist","success","EditProfileComponent","setUsername","setEmail","setRole","setPassword","Form","Group","controlId","Control","ArticleCardComponent","articleImage","alt","this","article","authorId","deleteArticle","icon","faTrash","React","Component","ArticleGridComponent","ArticlePageContainer","isAuthor","isAdmin","AuthorName","match","params","prev","findArticlesByAuthor","addArticle","articleReducer","actualArticle","InfoField","fieldName","fieldContent","setLoginUser","targetUser","setTargetUser","urlParams","useParams","redirectToLogin","width","ListGroup","defaultActiveKey","NavLink","path","component","code","MoviePageContainer","movieKeyword","queryString","parse","search","numMovies","CurrentCommentsComponent","updateCommentState","userOfComment","Media","Image","avatarUrl","window","reload","editing","PostCommentCompoent","setText","FormGroup","FormLabel","rows","handleSendComment","CommentSectionComponent","curUser","editComment","CastFigureComponent","Figure","profile_path","class","Caption","character","CastsComponent","watchlistService","removeMovieFromWatchlist","addMovie","addMovieToWatchlist","MovieDetailsPage","addWatchlist","isWatchlist","removeWatchlist","prevProps","snapshot","genre","faHeartSolid","faHeart","FigureCaption","tagline","overview","decodeGender","ActorInfoField","ListGroupItem","ActorBioComponent","rounded","known_for_department","gender","birthday","deathdate","deathday","place_of_birth","homepage","also_known_as","join","ActorBiographyComponent","biography","hasImage","credit","backdrop_path","ActorCreditComponent","original_name","ActorCreditsComponent","height","overflowY","c","ActorPhotosComponent","photoUrls","photoUrl","substr","ActorDetailsPage","fontWeight","p","file_path","actorReducer","actor","ArticleDetailsComponent","findArticleById","updateOnchange","ActorCardComponent","ActorGridComponent","actors","generatePaginationItems","numPages","currentPage","items","left","right","PaginationComponent","getLinkForPage","Pagination","ref","useRef","query","URLSearchParams","parseInt","current","total_pages","set","toString","App","updateErrorMessage","exact","ActorPageContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","NavBarReducer","action","MovieReducer","ArticleReducer","ActorReducer","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1086481.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const SEARCH_KEYWORD = \"SEARCH_KEYWORD\";\nexport const TYPE_KEYWORD = \"TYPE_KEYWORD\";\n// Find movies by a given title.\nexport const FIND_MOVIES_BY_TITLE = \"FIND_MOVIES_BY_TITLE\";\n// Fetch movies for a user.\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\n// Fetch details of a given movie.\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\n// Fetch details of a given actor.\nexport const FETCH_ACTOR = \"FETCH_ACTOR\";\n// Fetch a list of actors.\nexport const FETCH_ACTORS = \"FETCH_ACTORS\";\n\n// Get the current login user data\nexport const GET_LOGIN_USER = \"GET_LOGIN_USER\"\nexport const FIND_ARTICLES_BY_KEYWORD = \" FIND_ARTICLES_BY_KEYWORD\";\nexport const FETCH_ARTICLES = \"FETCH_ARTICLES\";\nexport const FETCH_ARTICLE = \"FETCH_ARTICLE\";\nexport const FETCH_ARTICLES_BY_AUTHOR = \"FETCH_ARTICLES_BY_AUTHOR\";\nexport const FETCH_ARTICLE_BY_ID = \"FETCH_ARTICLE_BY_ID\";\nexport const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const UPDATE_ARTICLE = \"UPDATE_ARTICLE\";\nexport const DELETE_ARTICLE = \"DELETE_ARTICLE\";\nexport const ON_CHANGE = \"ON_CHANGE\";\nexport const UPDATE_SEARCH_TYPE = \"UPDATE_SEARCH_TYPE\"\n\nconst actions = {\n  SEARCH_KEYWORD,\n  TYPE_KEYWORD,\n  FIND_MOVIES_BY_TITLE,\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  FETCH_ACTOR,\n  FETCH_ACTORS,\n\n  GET_LOGIN_USER,\n  FETCH_ARTICLES,\n  FETCH_ARTICLE,\n  FETCH_ARTICLES_BY_AUTHOR,\n  FETCH_ARTICLE_BY_ID,\n  ADD_ARTICLE,\n  UPDATE_ARTICLE,\n  DELETE_ARTICLE,\n  ON_CHANGE,\n  UPDATE_SEARCH_TYPE\n};\n\nexport default actions;\n","// Raw cast ID is in the format of \"/name/nm(\\d)*/\". This function extracts the\n// numeric ID.\nexport function extractCastID(rawCastID) {\n  console.log(`Exacting cast ID from ${rawCastID}`);\n  return rawCastID.substr(6, rawCastID.length() - 1);\n}\n\nexport const IMAGE_SIZE = {\n  xs: \"w92\",\n  sm: \"w154\",\n  md: \"w185\",\n  lg: \"w342\",\n  xl: \"w500\",\n  original: \"w780\",\n};\n\nexport function getPosterFullUrl(size, posterPath) {\n  return `http://image.tmdb.org/t/p/${size}/${posterPath}`;\n}\n","import { act } from \"react-dom/test-utils\";\nimport { extractCastID } from \"./utils\";\nconst apiKey = \"b3721fd8d8mshb6df83063eb73e8p11054fjsnb4d2c2322b3b\";\nconst tmdbApiKey = \"a41a171fff9eb512b2a0d0fe15d3405f\";\nconst tmdbApiReadAccessToken =\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNDFhMTcxZmZmOWViNTEyYjJhMGQwZmUxNWQzNDA1ZiIsInN1YiI6IjVmYjRhOGJiOWNhNzU5MDAzZjRmNjZjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.UvPomt3YxXPsbeE0Lm03taAncW1lDlKM2omv0Yip80Q\";\n\nfunction findByTitle(title) {\n  return fetch(`https://imdb8.p.rapidapi.com/title/find?q=${title}`, {\n    method: \"GET\",\n    headers: {\n      \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\n      \"x-rapidapi-key\": apiKey,\n    },\n  })\n    .then((response) => {\n      // console.log(response.json());\n      return response.json();\n    })\n    .then((response) => {\n      console.log(response.results);\n      console.log(response.results.map((item) => item.id));\n      return response.results.filter((item) => item.id.includes(\"title\"));\n    })\n    .catch((err) => {\n      console.log(err);\n      return err;\n    });\n}\n\nasync function fetchMovieByID(movieID) {\n  const movieRes = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  let movie = await movieRes.json();\n  const creditsRes = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  let credits = await creditsRes.json();\n  movie.casts = credits.cast;\n  return movie;\n}\n\nfunction findMoviesByUser(userID) {\n  return Promise.resolve([]);\n}\n\nasync function fetchPopularMovies(num) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  const payload = await res.json();\n  return payload.results.slice(0, num);\n}\n\nasync function fetchMoviesByTitle(title) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${tmdbApiKey}&query=${title}`,\n    {\n      method: \"GET\",\n    }\n  );\n\n  const payload = await res.json();\n  return payload.results;\n}\n\nconst getMovieNameById = async (movieId) => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${tmdbApiKey}&language=en-US`,\n    {\n      method: \"GET\",\n    }\n  );\n  const movieDetails = await res.json();\n  return movieDetails.title;\n};\n\nasync function fetchActorByID(actorID) {\n  const actorDetailsRes = await fetch(\n    `https://api.themoviedb.org/3/person/${actorID}?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  let actorDetails = await actorDetailsRes.json();\n\n  const actorPhotosRes = await fetch(\n    `https://api.themoviedb.org/3/person/${actorID}/images?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  let profiles = (await actorPhotosRes.json()).profiles;\n  console.log(profiles);\n  profiles.sort((a, b) => b.vote_average - a.vote_average);\n  actorDetails.photos = profiles;\n\n  const actorCreditsRes = await fetch(\n    `https://api.themoviedb.org/3/person/${actorID}/movie_credits?api_key=${tmdbApiKey}`,\n    {\n      method: \"GET\",\n    }\n  );\n  let credits = (await actorCreditsRes.json()).cast;\n  credits.sort((a, b) => b.vote_average - a.vote_average);\n  actorDetails.credits = credits;\n\n  return actorDetails;\n}\n\nasync function findActorsByName(name, page) {\n  const escapedName = escape(name);\n  const actorsRes = await fetch(\n    `https://api.themoviedb.org/3/search/person?api_key=${tmdbApiKey}&query=${escapedName}&page=${page}`,\n    {\n      method: \"GET\",\n    }\n  );\n  return await actorsRes.json();\n}\n\nconst service = {\n  findByTitle,\n  findMoviesByUser,\n  fetchPopularMovies,\n  fetchMovieByID,\n  fetchActorByID,\n  fetchMoviesByTitle,\n  findActorsByName,\n  getMovieNameById,\n};\n\nexport default service;\n","// export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\nexport const API_BASE_URL = \"https://mrw-final-project-node.herokuapp.com\"\n\nexport const API_USERS_URL = `${API_BASE_URL}/users`\nexport const API_MOVIES_URL = `${API_BASE_URL}/movies`\nexport const API_COMMENTS_URL = `${API_BASE_URL}/comments`\nexport const ACCESS_TOKEN_NAME = 'login_access_token';\n","// const url = \"http://localhost:4000/articles\"\nconst url = \"https://mrw-final-project-node.herokuapp.com/articles\"\n\nconst findAllArticles = () =>\n    fetch(url)\n        .then(response => response.json())\n\nconst findArticleById = (articleId) =>{\n    return fetch(`${url}/${articleId}`)\n        .then(response => {\n            return response.json();\n        })\n}\n\n\nconst findArticlesByAuthor= (userId) =>\n    fetch(`${url}/${userId}/allArticles`)\n        .then(response => response.json())\n\nconst createArticle = (newArticle) =>\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(newArticle),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\n\nconst deleteArticle = (articleId) =>\n    fetch(`${url}/${articleId}`, {\n        method: 'DELETE'\n    }).then(response => articleId)\n\n\nconst updateArticle = (articleId, newArticle) =>\n    fetch(`${url}/${articleId}`, {\n        method:'PUT',\n        body: JSON.stringify(newArticle),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => {\n        //console.log(response.json());\n        return response.json()\n    })\n\n\nconst findArticlesByTitle = (keyWord) => {\n    return findAllArticles().then((response) => {\n        //console.log(response);\n        return response.filter((item)=> item.title.includes(keyWord))\n    })\n}\n\nexport default {\n    findAllArticles,\n    findArticleById,\n    findArticlesByAuthor,\n    createArticle,\n    deleteArticle,\n    updateArticle,\n    findArticlesByTitle\n}\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\nimport Nav from \"react-bootstrap/cjs/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport {Form, FormControl, InputGroup, Dropdown} from \"react-bootstrap\";\nimport ReducerTypes, {FETCH_MOVIES, FIND_ARTICLES_BY_KEYWORD} from \"../reducers/ReducerTypes\";\nimport imdbService from \"../services/ImdbService\";\nimport {useLocation, useHistory, Link} from \"react-router-dom\"\nimport {ACCESS_TOKEN_NAME, API_BASE_URL} from \"../constants/ApiConstants\";\nimport ImdbService from \"../services/ImdbService\";\nimport axios from \"axios\";\nimport articleService from \"../services/articleService\";\nimport Select from \"react-dropdown-select\";\n\n\nconst NavbarComponent =\n  ({\n     keyword = \"\",\n     typeKeyword,\n     fetchMoviesByTitle,\n     loginUser,\n     getLoginUser,\n     searchMovies,\n     findArticlesByTitle,\n   }) => {\n    let location = useLocation();\n    let history = useHistory();\n    const [searchType, setSearchType] = useState(\"Movie\");\n    const [user, setUser] = useState({username: \"\"});\n\n    useEffect(() => {\n      axios\n        .get(API_BASE_URL + \"/users/me\", {\n          headers: {token: localStorage.getItem(ACCESS_TOKEN_NAME)},\n        })\n        .then(function (response) {\n          if (response.status === 200) {\n            setUser(response.data);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }, []);\n\n    const handleLogout = () => {\n      localStorage.removeItem(ACCESS_TOKEN_NAME);\n      history.push(\"/login\");\n    };\n\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-4\">\n        <Navbar.Brand as={Link} to=\"/\">\n          Movie Review\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/\">\n            Home\n          </Nav.Link>\n          <Nav.Link as={Link} to={`/users/${user._id}/profile`}>\n            Profile\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/articles\">\n            Articles\n          </Nav.Link>\n        </Nav>\n        {/*<Form inline>*/}\n        <InputGroup className=\"w-25\">\n          <InputGroup.Prepend>\n            <Dropdown onSelect={setSearchType}>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                {searchType}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item eventKey={\"Movie\"}>Movie</Dropdown.Item>\n                <Dropdown.Item eventKey={\"Actor\"}>Actor</Dropdown.Item>\n                <Dropdown.Item eventKey={\"Article\"}>Article</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </InputGroup.Prepend>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            onChange={(event) => typeKeyword(event.target.value)}\n            value={keyword}\n          />\n          {\n            searchType === \"Movie\" &&\n            <Button variant=\"outline-info\" onClick={() => {\n              history.push(`/movies?name=${keyword}`)\n              fetchMoviesByTitle(keyword)\n            }}>\n              Search\n            </Button>\n          }\n          {searchType === \"Actor\" && (\n            <Button\n              variant=\"outline-info\"\n              onClick={() => history.push(`/actors?name=${keyword}`)}\n            >\n              Search\n            </Button>\n          )}\n          {\n            searchType === \"Article\" &&\n            <Button variant=\"outline-info\" onClick={() => findArticlesByTitle(keyword)}>\n              Search\n            </Button>\n          }\n          {\n            user.username &&\n            <Button variant=\"outline-info\" onClick={() => {\n              console.log(location.pathname)\n              handleLogout()\n            }}>\n              Logout\n            </Button>\n          }\n          {!user.username && (\n            <Button\n              variant=\"outline-info\"\n              onClick={() => {\n                console.log(location.pathname);\n                history.push(\"/login\");\n              }}\n            >\n              Login\n            </Button>\n          )}\n        </InputGroup>\n        {/*</Form>*/}\n      </Navbar>\n    );\n  };\n\nconst stateToPropertyMapper = (state) => ({\n  keyword: state.navBarReducer.keyword,\n  loginUser: state.navBarReducer.loginUser,\n  searchType: state.navBarReducer.searchType\n});\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  typeKeyword: (keyword) =>\n    dispatch({\n      type: ReducerTypes.TYPE_KEYWORD,\n      keyword: keyword,\n    }),\n  searchMovies: (keyword) =>\n    imdbService.findByTitle(keyword).then((res) => {\n      return dispatch({\n        type: ReducerTypes.FIND_MOVIES_BY_TITLE,\n        movies: res,\n      });\n    }),\n  fetchMoviesByTitle: (title) => {\n    ImdbService.fetchMoviesByTitle(title).then((movies) => {\n      return dispatch({type: FETCH_MOVIES, movies});\n    });\n  },\n  getLoginUser: () => {\n    return axios\n      .get(API_BASE_URL + \"/users/me\", {\n        headers: {token: localStorage.getItem(ACCESS_TOKEN_NAME)},\n      })\n      .then((response) => {\n        return dispatch({\n          type: ReducerTypes.GET_LOGIN_USER,\n          loginUser: response.data,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  },\n  findArticlesByTitle: (keyword) => {\n    articleService.findArticlesByTitle(keyword)\n      .then((articles) => dispatch({\n        type: FIND_ARTICLES_BY_KEYWORD,\n        articles\n      }))\n  },\n  updateSearchType: (type) => {\n    return dispatch({\n      type: ReducerTypes.UPDATE_SEARCH_TYPE,\n      searchType: type\n    })\n  }\n});\n\nexport default connect(\n  stateToPropertyMapper,\n  propertyToDispatchMapper\n)(NavbarComponent);\n","import React from \"react\"\nimport {connect} from \"react-redux\";\nimport ReducerTypes from \"../reducers/ReducerTypes\";\n\nconst MovieListComponent =\n  ({\n     movies = [],\n     keyword = ''\n   }) => {\n    return (\n      <div>\n        <table className=\"table\">\n          <thead>\n          <tr>\n            <th>Title</th>\n            <th>Imdb ID</th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            movies.map(movie =>\n              <tr key={movie.id}>\n                <td>{movie.title}</td>\n                <td>{movie.id}</td>\n              </tr>)\n          }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\nconst stateToPropertyMapper = state => ({\n  keyword: state.navBarReducer.keyword,\n  movies: state.movieReducer.movies\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  searchKeyword: (keyword) => {\n    dispatch({\n      type: ReducerTypes.SEARCH_KEYWORD,\n      keyword: keyword\n    })\n    console.log(keyword)\n  },\n  typeKeyword: (keyword) => dispatch({\n    type: ReducerTypes.TYPE_KEYWORD,\n    keyword: keyword\n  })\n})\n\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)(MovieListComponent)\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './RegistrationForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../constants/ApiConstants';\nimport {withRouter} from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\",\n    confirmPassword: \"\",\n    successMessage: null\n  })\n  const handleChange = (e) => {\n    const {id, value} = e.target\n    setState(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  }\n  const sendDetailsToServer = () => {\n    if (state.email.length && state.password.length) {\n      props.showError(null);\n      const payload = {\n        \"username\": state.username,\n        \"email\": state.email,\n        \"password\": state.password,\n        \"role\": state.role\n      }\n      axios.post(API_BASE_URL + '/users/signup', payload)\n        .then(function (response) {\n          if (response.status === 200) {\n            setState(prevState => ({\n              ...prevState,\n              successMessage: 'Registration successful. Redirecting to home page..'\n            }))\n            localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n            redirectToHome();\n            props.showError(null)\n          } else {\n            props.showError(\"Some error occurred\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      props.showError('Please enter valid username and password')\n    }\n\n  }\n  const redirectToHome = () => {\n    props.updateTitle('Home')\n    props.history.push('/home');\n  }\n  const redirectToLogin = () => {\n    props.updateTitle('Login')\n    props.history.push('/login');\n  }\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    if (state.password === state.confirmPassword) {\n      sendDetailsToServer()\n    } else {\n      props.showError('Passwords do not match');\n    }\n  }\n  return (\n    <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n      <form>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputUserName\">Username</label>\n          <input type=\"text\"\n                 className=\"form-control\"\n                 id=\"username\"\n                 placeholder=\"Enter Username\"\n                 value={state.username}\n                 onChange={handleChange}\n          />\n\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\"\n                 className=\"form-control\"\n                 id=\"email\"\n                 aria-describedby=\"emailHelp\"\n                 placeholder=\"Enter email\"\n                 value={state.email}\n                 onChange={handleChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\"\n                 className=\"form-control\"\n                 id=\"password\"\n                 placeholder=\"Password\"\n                 value={state.password}\n                 onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n          <input type=\"password\"\n                 className=\"form-control\"\n                 id=\"confirmPassword\"\n                 placeholder=\"Confirm Password\"\n                 value={state.confirmPassword}\n                 onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleSelectRole\">Role</label>\n          <select className=\"form-control\"\n                  id=\"role\"\n                  onChange={handleChange}>\n            <option value=\"admin\" selected>Administrator</option>\n            <option value=\"user\">User</option>\n            <option value=\"author\">Author</option>\n          </select>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmitClick}\n        >\n          Register\n        </button>\n      </form>\n      <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none'}} role=\"alert\">\n        {state.successMessage}\n      </div>\n      <div className=\"mt-2\">\n        <span>Already have an account? </span>\n        <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span>\n      </div>\n\n    </div>\n  )\n}\n\nexport default withRouter(RegistrationForm);\n","import React, {useState, useEffect} from 'react';\nimport './AlertComponent.css';\n\nconst AlertComponent = (props) => {\n  const [modalDisplay, toggleDisplay] = useState('none');\n  const openModal = () => {\n    toggleDisplay('block');\n  }\n  const closeModal = () => {\n    toggleDisplay('none');\n    props.hideError(null);\n  }\n  useEffect(() => {\n    if (props.errorMessage !== null) {\n      openModal()\n    } else {\n      closeModal()\n    }\n  });\n\n  return (\n    <div\n      className={\"alert alert-danger alert-dismissable mt-4\"}\n      role=\"alert\"\n      id=\"alertPopUp\"\n      style={{display: modalDisplay}}\n    >\n      <div className=\"d-flex alertMessage\">\n        <span>{props.errorMessage}</span>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default AlertComponent\n","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {ACCESS_TOKEN_NAME} from '../constants/ApiConstants';\n\nconst PrivateRoute = ({children, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={({location}) =>\n        localStorage.getItem(ACCESS_TOKEN_NAME) ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {from: location}\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {API_BASE_URL, API_COMMENTS_URL} from \"../constants/ApiConstants\";\n\nexport const getCommentsForMovie = (movieId) => {\n  return fetch(`${API_BASE_URL}/movies/${movieId}/comments`, {\n    method: \"GET\",\n  }).then(res => res.json())\n}\n\nexport const addCommentForMovie = (newComment) => {\n  return fetch(`${API_BASE_URL}/comments`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newComment)\n  }).then(res => res.json())\n    .catch(e => {\n      console.log(e)\n    })\n}\n\nexport const getCommentsForUser = (userId) => {\n  console.assert(userId)\n  return fetch(`${API_BASE_URL}/users/${userId}/comments`, {\n    method: \"GET\",\n  }).then(res => res.json())\n}\n\nexport const deleteComment = (commentId, userId) => {\n  return fetch(`${API_COMMENTS_URL}/${commentId}`, {\n    method: \"DELETE\",\n    headers: {\n      userId\n    }\n  }).then(res => res.json())\n}\n\nexport const updateComment = (newComment) => {\n  const commentId = newComment._id\n  fetch(`${API_COMMENTS_URL}/${commentId}`, {\n    method: 'PUT',\n    body: JSON.stringify(newComment),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n}\n\nconst commentService = {\n  getCommentsForMovie,\n  addCommentForMovie,\n  getCommentsForUser,\n  deleteComment,\n  updateComment\n}\n\nexport default commentService\n","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {ACCESS_TOKEN_NAME, API_BASE_URL} from \"../../constants/ApiConstants\";\nimport commentService from \"../../services/CommentService\";\nimport imdbService from \"../../services/ImdbService\";\nimport {HashLink} from \"react-router-hash-link\"\nimport {stringify} from \"query-string\";\n\nconst MyComment = ({user}) => {\n  const [comments, setComments] = useState([]);\n  const [commentMovieMap, setCommentMovieMap] = useState({});\n  const [flag, setFlag] = useState(false)\n  const updateCommentMap = (commentId, movieName) => {\n    setCommentMovieMap(prevState => ({\n      ...prevState,\n      [commentId]: movieName\n    }))\n  }\n\n  useEffect(() => {\n    if (user._id) {\n      commentService.getCommentsForUser(user._id)\n        .then(res => {\n          setComments(res)\n        })\n      setFlag(true)\n    }\n  }, [user])\n\n  useEffect(() => {\n    comments.map(curComment => imdbService.getMovieNameById(curComment.movieId)\n      .then(movieName => {\n\n        updateCommentMap(curComment._id, movieName)\n        // curComment.movieName = movieName\n        // setComments(prevState => prevState.map(comment => comment._id === curComment._id ? curComment : comment))\n      }))\n  }, [comments])\n\n  return (\n    <div>\n      <h5 className=\"mb-3\">My Comments</h5>\n      <div className=\"col-md-12\">\n        <table className=\"table table-sm table-hover table-striped\">\n          <thead>\n          <tr>\n            <td>\n              Comment\n            </td>\n            <td>\n              Movie\n            </td>\n          </tr>\n          </thead>\n\n          <tbody>\n          {\n            comments.map(comment =>\n              <tr id={comment._id}>\n                <td>\n                  <strong>{comment.text}</strong>\n                </td>\n                <td>\n                  <HashLink to={`/movies/${comment.movieId}/#${comment._id}`}>\n                    {commentMovieMap[comment._id]}\n                  </HashLink>\n                </td>\n              </tr>\n            )\n          }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default MyComment\n","import {ACCESS_TOKEN_NAME, API_BASE_URL, API_USERS_URL} from \"../constants/ApiConstants\";\nimport axios from \"axios\";\n\nexport const updateUser = (userId, newUser) => {\n  return fetch(`${API_USERS_URL}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newUser)\n  }).then(res => res.json())\n}\n\nexport const getCurrentUser = () => {\n  return axios.get(API_BASE_URL + '/users/me', {headers: {'token': localStorage.getItem(ACCESS_TOKEN_NAME)}})\n    .then(response => {\n      if (response.status === 200) {\n        return response.data\n      }\n    })\n    .catch(function (error) {\n      console.log(error)\n    });\n}\n\nexport const updateMultipleUsers = (userList, option = {password:false}) => {\n  if (option.password === false) {\n    for (const user of userList) {\n      delete user.password\n    }\n  }\n  const updateList = userList.map(user => updateUser(user._id, user))\n  Promise.all(updateList).then(res => {\n    // console.log(res)\n  })\n}\n\nconst userService = {\n  updateUser,\n  updateMultipleUsers\n}\n\nexport default userService\n","import React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {ACCESS_TOKEN_NAME, API_BASE_URL} from '../../constants/ApiConstants';\nimport {Button} from \"react-bootstrap\";\nimport {updateMultipleUsers} from \"../../services/UserService\";\n\nconst AccountManagement = ({user, loginUser}) => {\n\n  const [users, setUsers] = useState([]);\n\n  const updateUser = (updatedUser) => {\n    setUsers(users.map(user => user._id === updatedUser._id ? updatedUser : user))\n  }\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/users`, {})\n      .then(res => {\n        setUsers(res.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      {\n        loginUser && loginUser._id === user._id && loginUser.role === 'admin' &&\n        <>\n          <h5 className=\"mb-3\">Account Management</h5>\n          <table className=\"table table-sm table-hover table-striped\">\n            <thead>\n            <tr>\n              <td>Username</td>\n              <td>Email</td>\n              <td>Role</td>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              users.map(user =>\n                <tr key={user._id}>\n                  <td>\n                    <input type=\"text\" value={user.username} onChange={(e) => {\n                      user.username = e.target.value\n                      updateUser(user)\n                    }}/>\n                  </td>\n                  <td>\n                    <input type=\"email\" value={user.email} onChange={(e) => {\n                      user.email = e.target.value\n                      updateUser(user)\n                    }}/>\n                  </td>\n                  <td>\n                    <select className=\"form-control text-center\"\n                            id=\"role\"\n                            value={user.role}\n                            onChange={(e) => {\n                              user.role = e.target.value\n                              updateUser(user)\n                            }}>\n                      <option value=\"admin\">Administrator</option>\n                      <option value=\"user\">User</option>\n                      <option value=\"author\">Author</option>\n                    </select>\n                  </td>\n                </tr>\n              )\n            }\n            </tbody>\n          </table>\n          <Button className=\"btn btn-primary\"\n                  onClick={() => {\n                    updateMultipleUsers(users)\n                  }}>\n            Submit\n          </Button>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default AccountManagement\n","import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst MovieCardComponent = ({ id, title, rating, posterUrl, releaseYear }) => {\n  return (\n    <Card className=\"m-0\" border=\"primary\">\n      <Card.Img variant=\"top\" src={posterUrl} />\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {releaseYear} - Rating: {rating}\n        </Card.Subtitle>\n        <Link to={`/movies/${id}`}>\n          <Button variant=\"primary\">Details</Button>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MovieCardComponent;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../services/utils\";\nimport MovieCardComponent from \"./MovieCardComponent\";\n\nconst placeholderImg = \"http://via.placeholder.com/342x513\";\n\nconst MovieGridComponent = ({ movies = [] }) => {\n  return (\n    <Container fluid>\n      <Row>\n        {movies.map(\n          ({ id, title, vote_average, poster_path, release_date }) => (\n            <Col xl={2} lg={3} md={4} sm={6} xs={12} key={id}>\n              <MovieCardComponent\n                id={id}\n                title={title}\n                rating={vote_average}\n                posterUrl={\n                  poster_path\n                    ? getPosterFullUrl(IMAGE_SIZE.lg, poster_path)\n                    : placeholderImg\n                }\n                releaseYear={release_date}\n              />\n            </Col>\n          )\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default MovieGridComponent;\n","import React, {useEffect, useState} from \"react\";\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\nimport imdbService from \"../../services/ImdbService\";\nimport MovieCardComponent from \"../MovieCardComponent\";\nimport MovieGridComponent from \"../MovieGridComponent\";\n\nconst Watchlist = ({user}) => {\n\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n    let movieList = []\n    let promises = []\n    console.log(user.watchlist)\n    try {\n      if (user.watchlist) {\n        for (const movieId of user.watchlist) {\n          promises.push(imdbService.fetchMovieByID(movieId).then(res => {\n            if (res.success !== false)\n              movieList.push(res)\n          }))\n        }\n        Promise.all(promises).then(res => setMovies(movieList))\n      }\n\n    } catch (e) {\n      console.log(e)\n    }\n\n  }, [user])\n\n  return (\n    <div>\n      <h5 className=\"mb-3\">Watchlist</h5>\n      <Row>\n        <MovieGridComponent movies={movies}/>\n      </Row>\n    </div>\n  )\n}\n\nexport default Watchlist\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Dropdown, Form, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport userService from \"../../services/UserService\";\n\nconst EditProfileComponent = ({user, loginUser}) => {\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [role, setRole] = useState(user.role)\n  const [password, setPassword] = useState('')\n\n  const submitUpdate = () => {\n    userService.updateUser(user._id, {username, email, role, password})\n  }\n\n  useEffect(() => {\n    console.log(loginUser)\n  }, [loginUser])\n  return (\n    <div id=\"profile\">\n      <h5 className=\"mb-3\">User Profile</h5>\n      {loginUser && loginUser._id === user._id &&\n      <Row className={\"align-items-center\"}>\n        <div className=\"col-12\">\n          <h6>Username</h6>\n          <FormControl value={username} onChange={(e) => setUsername(e.target.value)}/>\n          <h6>Email</h6>\n          <FormControl value={email} onChange={(e) => setEmail(e.target.value)}/>\n          <h6>Password</h6>\n          <FormControl placeholder={'Reset your password here'} value={password}\n                       onChange={(e) => setPassword(e.target.value)}/>\n          <h6>Role</h6>\n          <Form>\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\n              <Form.Control as=\"select\" value={role} onChange={(e) => setRole(e.target.value)}>\n                <option value={\"admin\"}>Admin</option>\n                <option value={\"user\"}>User</option>\n                <option value={\"author\"}> Author</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n\n\n          <Button className=\"m-4\" onClick={submitUpdate}>\n            Submit\n          </Button>\n        </div>\n      </Row>\n      }\n    </div>\n\n  )\n}\n\nexport default EditProfileComponent\n","export default __webpack_public_path__ + \"static/media/article.117864ea.png\";","import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport articleImage from '../../image/article.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\n\nclass ArticleCardComponent extends React.Component{\n    constructor(props) { //{article, userId, deleteArticle}\n        super(props);\n    }\n\n    render(){\n        return (\n            <Card className=\"m-0\" border=\"primary\">\n                <Card.Img variant=\"top\" src={articleImage} alt=\"Logo\" />\n                <Card.Body>\n                    <Card.Title>{this.props.article.title}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                      {this.props.article.authorId.username}\n                    </Card.Subtitle>\n                    {\n                        this.props.userId === this.props.article.authorId &&\n                        <Link to={`/${this.props.userId}/articles/${this.props.article._id}`}>\n                            <Button variant=\"primary\">Details</Button>\n                        </Link>\n                    }\n                    {\n                        this.props.userId !== this.props.article.authorId &&\n                        <Link to={`/articles/${this.props.article._id}`}>\n                            <Button variant=\"primary\">Details</Button>\n                        </Link>\n                    }\n\n                    {\n                      (this.props.loginUser && this.props.loginUser.role === 'admin' || (this.props.loginUser && this.props.loginUser._id === this.props.article.authorId)) &&\n                        <i className=\"float-right\"\n                           onClick={()=> {\n                               return this.props.deleteArticle(this.props.article)\n                           }}>\n                            <FontAwesomeIcon icon={faTrash}/>\n                        </i>\n                    }\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\n\nexport default ArticleCardComponent;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ArticleCardComponent from \"./ArticleCardComponent\";\n\nconst ArticleGridComponent = ({articles, userId, deleteArticle, loginUser}) => {\n    return (\n        <Container fluid>\n            <Row>\n                {articles.map(article => (\n                    <Col xl={2} lg={3} md={4} sm={6} xs={12} key={article._id}>\n                        <ArticleCardComponent\n                            article = {article}\n                            userId = {userId}\n                            deleteArticle = {deleteArticle}\n                            loginUser = {loginUser}\n                        />\n                    </Col>\n                ))}\n            </Row>\n        </Container>\n    )\n}\n\nexport default ArticleGridComponent;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport ArticleGridComponent from \"../components/article/ArticleGridComponent\";\nimport articleService from \"../services/articleService\";\nimport {ADD_ARTICLE, DELETE_ARTICLE, FETCH_ARTICLES, FIND_ARTICLES_BY_KEYWORD} from \"../reducers/ReducerTypes\";\nimport '../css/style.css'\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport {getCurrentUser} from \"../services/UserService\";\n\nclass ArticlePageContainer extends React.Component {\n  state = {\n    articles: [],\n    article: {},\n    isAuthor: false,\n    isAdmin: false,\n    AuthorName: \"\",\n    userId: \"\",\n    loginUser: {}\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n\n    getCurrentUser().then(loginUser => this.setState(prev => ({\n      ...prev,\n      loginUser\n    }), () => {\n      if (this.state.loginUser) {\n        this.setState(prev => ({\n          ...prev,\n          isAuthor: this.state.loginUser.role === 'author',\n          isAdmin: this.state.loginUser.role === 'admin',\n          userId: this.state.loginUser._id\n        }))\n      }\n    }))\n\n    if (userId) {\n      this.props.findArticlesByAuthor(userId);\n    } else {\n      this.props.findAllArticles();\n    }\n    console.log(\"articles in props: \" + this.props.articles.length)\n    console.log(\"articles in state: \" + this.state.articles.length)\n    console.log(\"userId\" + this.state.userId)\n  }\n\n\n  render() {\n    return (\n      <>\n        {/*<NavbarComponent findArticlesByTitle={this.props.findArticlesByTitle}/>*/}\n        <div className=\"sticky-box\">\n          {\n            (this.state.isAuthor || this.state.isAdmin) &&\n            <button type=\"button\" className=\"btn btn-success float-left\"\n                    onClick={() => this.props.addArticle(this.state.userId)}>\n              Add Article\n            </button>\n          }\n        </div>\n        <ArticleGridComponent articles={this.props.articles}\n                              userId={this.state.userId}\n                              deleteArticle={this.props.deleteArticle}\n                              loginUser={this.state.loginUser}/>\n      </>\n    );\n  }\n}\n\nconst stateToPropertyMapper = (state) => ({\n  articles: state.articleReducer.articles\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  // get the author name\n  findAllArticles: () => {\n    articleService.findAllArticles()\n      .then((articles) => dispatch({type: FETCH_ARTICLES, articles}));\n  },\n  findArticlesByAuthor: (userId) => {\n    articleService.findArticlesByAuthor(userId)\n      .then(articles => dispatch({type: FETCH_ARTICLES, articles}))\n  },\n  addArticle: (userId) => {\n    //console.log(state)\n    const newArticle = {\n      title: 'New Article',\n      text: 'Please write your article here.',\n      authorId: userId\n    }\n    articleService.createArticle(newArticle)\n      .then(actualArticle => dispatch({type: ADD_ARTICLE, article: actualArticle}));\n  },\n\n  deleteArticle: (article) => {\n    articleService.deleteArticle(article._id)\n      .then(articleId => {\n        //console.log(\"delete \" + articleId);\n        return dispatch({type: DELETE_ARTICLE, articleId})\n      })\n  },\n\n  findArticlesByTitle: (keyword) => {\n    articleService.findArticlesByTitle(keyword)\n      .then((articles) => dispatch({\n        type: FIND_ARTICLES_BY_KEYWORD,\n        articles\n      }))\n  }\n})\n\n\nexport default connect\n(stateToPropertyMapper, propertyToDispatchMapper)\n(ArticlePageContainer)\n","import React, {useEffect, useState} from 'react'\nimport {Link, Route, Switch, withRouter, useParams} from 'react-router-dom';\nimport {ACCESS_TOKEN_NAME, API_BASE_URL, API_USERS_URL} from '../constants/ApiConstants';\nimport axios from 'axios'\nimport {ListGroupItem, Nav, ListGroup} from \"react-bootstrap\";\nimport {NavLink} from \"react-bootstrap\";\nimport UserProfile from \"./UserProfile/UserProfile\";\nimport MyComment from \"./UserProfile/MyComments\";\nimport AccountManagement from \"./UserProfile/AccountManagement\";\nimport Watchlist from \"./UserProfile/Watchlist\";\nimport EditProfileComponent from \"./UserProfile/EditProfileComponent\";\nimport ArticlePageContainer from \"../containers/ArticlePageContainer\";\n\nconst InfoField = ({fieldName, fieldContent}) => {\n  return (\n    <div>\n      <hr/>\n      <h6 className=\"text-center\">\n        <strong>{fieldName}</strong>\n      </h6>\n      <p className=\"text-center\">{fieldContent}</p>\n    </div>\n  );\n};\n\nconst UserHomePage = (props) => {\n  const [loginUser, setLoginUser] = useState({username: ''});\n  const [targetUser, setTargetUser] = useState({})\n\n  let urlParams = useParams();\n\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/users/me', {headers: {'token': localStorage.getItem(ACCESS_TOKEN_NAME)}})\n      .then(function (response) {\n        if (response.status !== 200) {\n          redirectToLogin()\n        }\n        setLoginUser(response.data)\n      })\n      .catch(function (error) {\n        redirectToLogin()\n      });\n  }, [])\n\n  useEffect(() => {\n      if (!urlParams.userId) {\n        setTargetUser(loginUser)\n        return\n      }\n      axios.get(`${API_USERS_URL}/${urlParams.userId}`)\n        .then(function (response) {\n          if (response.status !== 200) {\n            redirectToLogin()\n          }\n          setTargetUser(response.data)\n        })\n        .catch(function (error) {\n          console.log(error)\n          redirectToLogin()\n        });\n    }, [loginUser]\n  )\n\n  const redirectToLogin = () => {\n    props.history.push('/login');\n  }\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row my-2\">\n\n        <div className=\"col-lg-4 order-lg-1 text-center\">\n          <img src=\"https://cdn.pixabay.com/photo/2017/06/13/12/53/profile-2398782_1280.png\"\n               width={\"200px\"} className=\"mx-auto img-fluid img-circle d-block\" alt=\"avatar\"/>\n          <ListGroup>\n            <InfoField fieldName={\"Username\"} fieldContent={targetUser.username}/>\n          </ListGroup>\n          <ListGroup>\n            <InfoField fieldName={\"Email\"} fieldContent={targetUser.email}/>\n          </ListGroup>\n          <ListGroup>\n            <InfoField fieldName={\"Role\"} fieldContent={targetUser.role}/>\n          </ListGroup>\n        </div>\n\n        <div className=\"col-lg-8 order-lg-2\">\n          <Nav variant=\"tabs\" defaultActiveKey=\"/home\">\n            {\n              targetUser._id === loginUser._id &&\n              <Nav.Item>\n                <NavLink as={Link} to={`/users/${targetUser._id}/edit`} eventKey={\"edit\"}>Edit</NavLink>\n              </Nav.Item>\n            }\n            <Nav.Item>\n              <NavLink as={Link} to={`/users/${targetUser._id}/comments`} eventKey={\"comments\"}>Comments</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink as={Link} to={`/users/${targetUser._id}/watchlist`} eventKey={\"watchlist\"}>Watchlist</NavLink>\n            </Nav.Item>\n\n            {\n              (loginUser.role === 'author' || loginUser.role === 'admin') &&\n              <Nav.Item>\n                <NavLink as={Link} to={`/users/${targetUser._id}/articles`}\n                         eventKey={\"articles\"}>Articles</NavLink>\n              </Nav.Item>\n            }\n\n            {\n              loginUser.role === \"admin\" &&\n              <Nav.Item>\n                <NavLink as={Link} to={`/users/${targetUser._id}/account-management`} eventKey={\"account-management\"}>Account\n                  Management</NavLink>\n              </Nav.Item>\n            }\n\n          </Nav>\n\n          <Switch>\n            {/*<Route path={`/users/${targetUser._id}/profile`}>*/}\n            {/*  <UserProfile user={targetUser}/>*/}\n            {/*</Route>*/}\n            <Route path={`/users/${targetUser._id}/comments`}>\n              <MyComment user={targetUser}/>\n            </Route>\n            <Route path={`/users/${targetUser._id}/account-management`}>\n              <AccountManagement user={targetUser} loginUser={loginUser}/>\n            </Route>\n            <Route path={`/users/:userId/articles`} component={ArticlePageContainer}/>\n            <Route path={`/users/${targetUser._id}/watchlist`}>\n              <Watchlist user={targetUser}/>\n            </Route>\n            <Route path={`/users/${targetUser._id}/edit`}>\n              <EditProfileComponent user={targetUser} loginUser={loginUser}/>\n            </Route>\n          </Switch>\n\n        </div>\n\n      </div>\n    </div>\n  )\n\n}\n\nexport default withRouter(UserHomePage)\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../constants/ApiConstants';\nimport {withRouter} from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    successMessage: null\n  })\n  const handleChange = (e) => {\n    const {id, value} = e.target\n    setState(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  }\n\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    const payload = {\n      \"email\": state.email,\n      \"password\": state.password,\n    }\n    axios.post(API_BASE_URL + '/users/login', payload)\n      .then(function (response) {\n        if (response.status === 200) {\n          setState(prevState => ({\n            ...prevState,\n            'successMessage': 'Login successful. Redirecting to home page..'\n          }))\n          localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n          redirectToHome();\n          props.showError(null)\n        } else if (response.code === 204) {\n          props.showError(\"Username and password do not match\");\n        } else {\n          props.showError(\"Username does not exists\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  const redirectToHome = () => {\n    props.updateTitle('Home')\n    props.history.push('/home');\n  }\n  const redirectToRegister = () => {\n    props.history.push('/register');\n    props.updateTitle('Register');\n  }\n  return (\n    <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n      <form>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\"\n                 className=\"form-control\"\n                 id=\"email\"\n                 aria-describedby=\"emailHelp\"\n                 placeholder=\"Enter email\"\n                 value={state.email}\n                 onChange={handleChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\"\n                 className=\"form-control\"\n                 id=\"password\"\n                 placeholder=\"Password\"\n                 value={state.password}\n                 onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-check\">\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmitClick}\n        >Submit\n        </button>\n      </form>\n      <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none'}} role=\"alert\">\n        {state.successMessage}\n      </div>\n      <div className=\"registerMessage\">\n        <span>Dont have an account? </span>\n        <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(LoginForm);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport MovieGridComponent from \"../components/MovieGridComponent\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport {FETCH_MOVIES} from \"../reducers/ReducerTypes\";\nimport ImdbService from \"../services/ImdbService\";\nimport queryString from 'query-string'\n\nconst NUM_POPULAR_MOVIES = 40\n\nclass MoviePageContainer extends Component {\n  componentDidMount() {\n    const query = queryString.parse(this.props.location.search);\n    const movieKeyword = query.name;\n    if (movieKeyword) {\n      this.props.fetchMoviesByTitle(movieKeyword);\n    } else {\n      this.props.fetchPopularMovies(NUM_POPULAR_MOVIES);\n    }\n  }\n\n  render() {\n    return (\n      <MovieGridComponent movies={this.props.movies}/>\n    );\n  }\n}\n\nconst stateToProps = (state) => ({\n  movies: state.movieReducer.movies,\n});\n\nconst dispatchToProps = (dispatch) => ({\n  fetchMoviesByTitle: (movieKeyword) =>\n    ImdbService.fetchMoviesByTitle(movieKeyword).then((movies) =>\n      dispatch({type: FETCH_MOVIES, movies})\n    ),\n  fetchPopularMovies: (numMovies) =>\n    ImdbService.fetchPopularMovies(numMovies).then((movies) =>\n      dispatch({type: FETCH_MOVIES, movies})\n    )\n});\n\nexport default connect(stateToProps, dispatchToProps)(MoviePageContainer);\n","import React from \"react\";\nimport {Button, Image, Media} from \"react-bootstrap\";\nimport commentService from \"../../services/CommentService\";\n\nconst placeholderImg =\n  \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2264%22%20height%3D%2264%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2064%2064%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_175da5a14d1%20text%20%7B%20fill%3Argba(255%2C255%2C255%2C.75)%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_175da5a14d1%22%3E%3Crect%20width%3D%2264%22%20height%3D%2264%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2213.8359375%22%20y%3D%2236.5%22%3E64x64%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\";\n\nconst CurrentCommentsComponent = (\n  {\n    user={}, children, comment, updateCommentState\n  }) => {\n\n  const userOfComment = comment.userId[0]\n\n  return (\n    <div>\n      <hr/>\n      <Media>\n        <Image className=\"mr-3\" src={user.avatarUrl || placeholderImg}/>\n        <Media.Body>\n          <h5 className=\"mt-0 text-justify\">{userOfComment.username || \"No Username\"}</h5>\n          {children}\n        </Media.Body>\n\n        {\n          user._id === userOfComment._id &&\n          <Button variant=\"primary\"\n                  onClick={() => commentService.deleteComment(comment._id, user._id)\n                    .then(() => window.location.reload(false))}>\n            Delete\n          </Button>\n        }\n\n        {\n          user._id === userOfComment._id &&\n          !comment.editing &&\n          <Button variant=\"warning\"\n                  onClick={() => {\n                    comment.editing = true\n                    updateCommentState(comment)\n                  }\n                  }>\n            Edit\n          </Button>\n        }\n\n        {\n          user._id === userOfComment._id &&\n          comment.editing &&\n          <Button variant=\"success\"\n                  onClick={() => {\n                    comment.editing = false\n                    updateCommentState(comment)\n                    commentService.updateComment(comment)\n                  }}>\n            Submit\n          </Button>\n        }\n\n      </Media>\n    </div>\n  );\n};\n\nexport default CurrentCommentsComponent;\n","import React, {useEffect, useState} from 'react'\nimport {Button, Form, FormControl, FormGroup, FormLabel} from 'react-bootstrap'\nimport axios from \"axios\";\nimport {ACCESS_TOKEN_NAME, API_BASE_URL, API_USERS_URL} from \"../../constants/ApiConstants\";\nimport {Link, useParams} from \"react-router-dom\";\nimport commentService, {getCommentsForMovie} from \"../../services/CommentService\";\n\nconst PostCommentCompoent = () => {\n  const [user, setUser] = useState({username: ''});\n  const [text, setText] = useState('');\n  const movieId = useParams()[\"movieID\"];\n\n  useEffect(() => {\n    axios.get(API_USERS_URL + '/me', {headers: {'token': localStorage.getItem(ACCESS_TOKEN_NAME)}})\n      .then(function (response) {\n        if (response.status == 200) {\n          setUser(response.data)\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  }, [])\n\n\n  const handleSendComment = (movieId) => {\n    const newComment = {\n      movieId,\n      text,\n      \"userId\": user._id\n    }\n    commentService.addCommentForMovie(newComment)\n  }\n\n  return (\n    <Form>\n      <FormGroup>\n        <FormLabel htmlFor=\"comment\" className=\"float-left\">Your Comment</FormLabel>\n        {\n          user.username &&\n          <FormControl name=\"comment\" as=\"textarea\" rows=\"3\"\n                       onChange={(event) => {\n                         setText(event.target.value)\n                       }}/>\n        }\n        {\n          !user.username &&\n          <div>\n            Please\n            <Link to={\"/login\"}> Log in </Link>\n            to comment.\n          </div>\n        }\n      </FormGroup>\n      {\n        user.username &&\n        <Button type=\"submit\" variant=\"outline-primary\" className=\"float-left\"\n                onClick={() => {\n                  handleSendComment(movieId)\n                }}>\n          Send\n        </Button>\n      }\n\n    </Form>\n  )\n}\n\nexport default PostCommentCompoent;\n","import {Col, Container, FormControl, Row} from \"react-bootstrap\";\nimport CurrentCommentsComponent from \"./CurrentCommentsComponent\";\nimport PostCommentCompoent from \"./PostCommentComponent\";\nimport {useEffect, useState} from \"react\";\nimport commentService from \"../../services/CommentService\";\nimport {useParams} from \"react-router-dom\";\n\nconst CommentSectionComponent = ({curUser}) => {\n  const [comments, setComments] = useState([]);\n  const movieId = useParams()[\"movieID\"];\n\n  useEffect(() => {\n    commentService.getCommentsForMovie(movieId).then(res => {\n      setComments(res)\n    })\n  }, [])\n\n  const editComment = (newComment) => {\n    setComments(comments.map(comment => comment._id === newComment ? newComment : comment))\n  }\n  return (\n    <div>\n\n      <Row>\n        <Col>\n          <h3 className=\"float-left\">Comments</h3>\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col>\n          <PostCommentCompoent/>\n        </Col>\n      </Row>\n\n      {\n        comments.map(comment =>\n          <div key={comment._id} id={comment._id}>\n            <Row>\n              <Col>\n                {/*<CurrentCommentsComponent user={comment.userId[0]} comment={comment} updateCommentState={editComment}>*/}\n                <CurrentCommentsComponent user={curUser} comment={comment} updateCommentState={editComment}>\n                  {!comment.editing &&\n                  <p className=\"text-justify\">\n                    {comment.text}\n                  </p>\n                  }\n                  {\n                    comment.editing &&\n                    <FormControl value={comment.text}\n                                 onChange={(event) => {\n                                   comment.text = event.target.value\n                                   editComment(comment)\n                                 }}/>\n                  }\n                </CurrentCommentsComponent>\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n    </div>\n  );\n};\n\nexport default CommentSectionComponent;\n","import React from \"react\";\nimport { Figure } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../../services/utils\";\n\nconst CastFigureComponent = ({cast}) => {\n  return (\n    <Figure>\n      <Link to={`/actors/${cast.id}`}>\n        <img\n          src={getPosterFullUrl(IMAGE_SIZE.sm, cast.profile_path)}\n          class=\"figure-img img-fluid rounded\"\n          alt={cast.name}\n        />\n      </Link>\n      <Figure.Caption>\n        <strong>{cast.name}</strong>\n      </Figure.Caption>\n      <Figure.Caption class=\"figure-caption\">{cast.character}</Figure.Caption>\n    </Figure>\n  );\n};\n\nexport default CastFigureComponent;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport CastFigureComponent from \"./CastFigureComponent\";\n\nconst CastsComponent = ({ casts }) => {\n  return (\n    <div>\n      <Row>\n        <Col>\n          <h3 className=\"float-left\">Casts</h3>\n        </Col>\n      </Row>\n      <Row>\n        {casts\n          .filter((cast) => cast.profile_path !== null)\n          .map((cast) => {\n            return (\n              <Col xl={2} lg={3} md={4} sm={6} xs={12} key={cast.id}>\n                <CastFigureComponent cast={cast} />\n              </Col>\n            );\n          })}\n      </Row>\n    </div>\n  );\n};\n\nexport default CastsComponent;\n","import {API_BASE_URL, API_USERS_URL} from \"../constants/ApiConstants\";\n\nexport const removeMovieFromWatchlist = (userId, movieId) => {\n  return fetch(`${API_USERS_URL}/${userId}/movies/${movieId}`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({addMovie: false})\n  }).then(res => res.json())\n}\n\nexport const addMovieToWatchlist = (userId, movieId) => {\n  return fetch(`${API_USERS_URL}/${userId}/movies/${movieId}`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({addMovie: true})\n  }).then(res => res.json())\n}\n\nconst watchlistService = {\n  removeMovieFromWatchlist,\n  addMovieToWatchlist\n}\n\nexport default watchlistService\n","import React, {Component} from \"react\";\nimport {Button, Container, Figure} from \"react-bootstrap\";\nimport FigureCaption from \"react-bootstrap/esm/FigureCaption\";\nimport {connect} from \"react-redux\";\nimport CommentSectionComponent from \"../../components/comment/CommentSectionComponent\";\nimport CastsComponent from \"../../components/movie-details/CastsComponent\";\nimport {FETCH_MOVIE} from \"../../reducers/ReducerTypes\";\nimport ImdbService from \"../../services/ImdbService\";\nimport {getPosterFullUrl, IMAGE_SIZE} from \"../../services/utils\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faHeart} from \"@fortawesome/free-regular-svg-icons/faHeart\";\nimport {faHeart as faHeartSolid} from \"@fortawesome/free-solid-svg-icons/faHeart\";\nimport watchlistService from \"../../services/WatchlistService\";\nimport axios from \"axios\";\nimport {ACCESS_TOKEN_NAME, API_BASE_URL} from \"../../constants/ApiConstants\";\n\nclass MovieDetailsPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWatchlist: false,\n      loginUser: this.props.loginUser,\n      movie: this.props.movie\n    };\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    if (params.movieID) {\n      this.props.fetchMovieByID(params.movieID);\n    }\n    let loginUser;\n    axios.get(API_BASE_URL + '/users/me', {headers: {'token': localStorage.getItem(ACCESS_TOKEN_NAME)}})\n      .then((response) => {\n        loginUser = response.data\n        console.log(loginUser)\n        this.setState(prev => ({\n          ...prev,\n          loginUser: response.data,\n          isWatchlist: loginUser.watchlist.includes(params.movieID)\n        }))\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const movieID = this.props.match.movieID;\n    if (movieID !== prevProps.match.movieID) {\n      this.props.fetchMovieByID(movieID);\n    }\n  }\n\n  addWatchlist = (movieId) => {\n    this.setState(prev => ({...prev, isWatchlist: true}))\n    if (this.state.loginUser) {\n      watchlistService.addMovieToWatchlist(this.state.loginUser._id, movieId)\n    }\n  }\n\n  removeWatchlist = (movieId) => {\n\n    this.setState(prev => ({...prev, isWatchlist: false}))\n    if (this.state.loginUser) {\n      watchlistService.removeMovieFromWatchlist(this.state.loginUser._id, movieId)\n    }\n  }\n\n  render() {\n    const movie = this.props.movie;\n    const loginUser = this.props.loginUser\n\n    return (\n      <Container>\n        <h1 className=\"display-1 font-weight-bold\">{movie.title || \"Title\"}</h1>\n        <h3>\n          <small className=\"text-muted\">\n            Rating: {movie.vote_average || -1} | {movie.genre} (\n            {movie.release_date || \"Unknown\"})\n          </small>\n        </h3>\n        {\n          this.state.isWatchlist &&\n          <Button onClick={() => this.removeWatchlist(movie.id)}>\n            <FontAwesomeIcon icon={faHeartSolid}/>\n          </Button>\n        }\n        {\n          !this.state.isWatchlist &&\n          <Button onClick={() => this.addWatchlist(movie.id)}>\n            <FontAwesomeIcon icon={faHeart}/>\n          </Button>\n        }\n        <div className=\"col-md-12\">\n          <Figure>\n            <img\n              src={getPosterFullUrl(IMAGE_SIZE.lg, movie.poster_path)}\n              className=\"figure-img img-fluid rounded\"\n              alt=\"A generic square placeholder image with rounded corners in a figure.\"\n            />\n            <FigureCaption placeholder=\"tagline\">{movie.tagline}</FigureCaption>\n          </Figure>\n          <p className=\"text-justify\">{movie.overview || \"Description\"}</p>\n        </div>\n        <hr/>\n        <CastsComponent casts={movie.casts || []}/>\n        <hr/>\n        <CommentSectionComponent curUser={this.state.loginUser}/>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movie: state.movieReducer.movie,\n    loginUser: state.navBarReducer.loginUser\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMovieByID: (movieID) =>\n      ImdbService.fetchMovieByID(movieID).then((movie) =>\n        dispatch({type: FETCH_MOVIE, movie})\n      ),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetailsPage);\n","import React from \"react\";\nimport { Figure, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../../services/utils\";\n\nconst placeholderImg = \"http://via.placeholder.com/342x513\";\n\nconst decodeGender = (num) => {\n  switch (num) {\n    case 1:\n      return \"Female\";\n    case 2:\n      return \"Male\";\n    default:\n      return \"Unknown\";\n  }\n};\n\nconst ActorInfoField = ({ fieldName, fieldContent }) => {\n  return (\n    <ListGroupItem>\n      <h6 className=\"text-left\">\n        <strong>{fieldName}</strong>\n      </h6>\n      <p className=\"text-left\">{fieldContent}</p>\n    </ListGroupItem>\n  );\n};\n\nconst ActorBioComponent = ({ actorDetails }) => {\n  return (\n    <div>\n      <h3 className=\"text-left mb-4\">\n        <strong>Info</strong>\n      </h3>\n      <Figure>\n        <Figure.Image\n          alt=\"171x180\"\n          src={\n            actorDetails.profile_path\n              ? getPosterFullUrl(IMAGE_SIZE.lg, actorDetails.profile_path)\n              : placeholderImg\n          }\n          fluid\n          rounded\n        />\n      </Figure>\n      <ListGroup variant=\"flush\">\n        <ActorInfoField\n          fieldName=\"Known For\"\n          fieldContent={actorDetails.known_for_department}\n        />\n        <ActorInfoField\n          fieldName=\"Gender\"\n          fieldContent={decodeGender(actorDetails.gender)}\n        />\n        <ActorInfoField\n          fieldName=\"Birthday\"\n          fieldContent={actorDetails.birthday}\n        />\n        {actorDetails.deathdate && (\n          <ActorInfoField\n            fieldName=\"Day of Death\"\n            fieldContent={actorDetails.deathday}\n          />\n        )}\n        {actorDetails.place_of_birth && (\n          <ActorInfoField\n            fieldName=\"Place of Birth\"\n            fieldContent={actorDetails.place_of_birth}\n          />\n        )}\n        {actorDetails.homepage && (\n          <ActorInfoField\n            fieldName=\"Homepage\"\n            fieldContent={actorDetails.homepage}\n          />\n        )}\n        {actorDetails.also_known_as && (\n          <ActorInfoField\n            fieldName=\"Also Known as\"\n            fieldContent={actorDetails.also_known_as.join(\" • \")}\n          />\n        )}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default ActorBioComponent;\n","import React from \"react\";\n\nconst ActorBiographyComponent = ({ name, biography }) => {\n  return (\n    <div>\n      <h3 className=\"text-left mb-4\">\n        <strong>Biography</strong>\n      </h3>\n      <p className=\"text-left\">\n        {biography}\n      </p>\n    </div>\n  );\n};\n\nexport default ActorBiographyComponent;\n","import React from \"react\";\nimport { Image, Media } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../../services/utils\";\n\nconst placeholderImg = \"http://via.placeholder.com/92x128\";\n\nconst hasImage = (credit) => {\n  return (credit.poster_path || credit.backdrop_path) != null;\n};\n\nconst ActorCreditComponent = ({ credit }) => {\n  return (\n    <Media className=\"mb-4\">\n      <Link to={`/movies/${credit.id}`}>\n        <Image\n          className=\"mr-3\"\n          src={\n            hasImage(credit)\n              ? getPosterFullUrl(\n                  IMAGE_SIZE.xs,\n                  credit.poster_path || credit.backdrop_path\n                )\n              : placeholderImg\n          }\n        />\n      </Link>\n      <Media.Body className=\"text-left\">\n        <h5 className=\"mt-0\" className=\"text-left\">\n          {credit.title || credit.original_name}\n        </h5>\n        {credit.overview}\n      </Media.Body>\n    </Media>\n  );\n};\n\nexport default ActorCreditComponent;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport ActorCreditComponent from \"./ActorCreditComponent\";\n\nconst ActorCreditsComponent = ({ credits = [] }) => {\n  return (\n    <Row>\n      <Col md={12} className=\"text-left mb-3\">\n        <h3>\n          <strong>Credits</strong>\n        </h3>\n      </Col>\n      <Row style={{ height: \"400px\", overflowY: \"auto\"}}>\n        {credits.map((c) => (\n          <Col md={12}>\n            <ActorCreditComponent credit={c} />\n          </Col>\n        ))}\n      </Row>\n    </Row>\n  );\n};\n\nexport default ActorCreditsComponent;\n","import React from \"react\";\nimport { Col, Figure, Row } from \"react-bootstrap\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../../services/utils\";\n\nconst ActorPhotosComponent = ({ photoUrls }) => {\n  return (\n    <Row className=\"mb-4\">\n      <Col>\n        <Row className=\"mb-3\">\n          <Col>\n            <h3 className=\"float-left\">\n              <strong>Photos</strong>\n            </h3>\n          </Col>\n        </Row>\n        <Row style={{ height: \"300px\", overflowY: \"auto\" }}>\n          {photoUrls.map((photoUrl) => {\n            return (\n              <Col\n                xl={3}\n                lg={4}\n                md={6}\n                sm={12}\n                xs={12}\n                key={photoUrl.substr(1)}\n              >\n                <Figure>\n                  <Figure.Image\n                    src={getPosterFullUrl(IMAGE_SIZE.sm, photoUrl)}\n                    fluid\n                    rounded\n                  />\n                </Figure>\n              </Col>\n            );\n          })}\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ActorPhotosComponent;\n","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ActorBioComponent from \"../../components/actor-details/ActorBioComponent\";\nimport ActorBiographyComponent from \"../../components/actor-details/ActorBiographyComponent\";\nimport ActorCreditsComponent from \"../../components/actor-details/ActorCreditsComponent\";\nimport ActorPhotosComponent from \"../../components/actor-details/ActorPhotosComponent\";\nimport { FETCH_ACTOR } from \"../../reducers/ReducerTypes\";\nimport ImdbService from \"../../services/ImdbService\";\n\nclass ActorDetailsPage extends Component {\n  componentDidMount() {\n    const params = this.props.match.params;\n    if (params.actorID) {\n      this.props.fetchActorByID(params.actorID);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const actorID = this.props.match.actorID;\n    if (actorID !== prevProps.match.actorID) {\n      this.props.fetchActorByID(actorID);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-left mt-4 display-1\" style={{fontWeight: 800}}>\n          <strong>{this.props.actorDetails.name}</strong>\n        </h1>\n        <Row className=\"mt-4\">\n          <Col md={3}>\n            <ActorBioComponent actorDetails={this.props.actorDetails} />\n          </Col>\n          <Col md={9}>\n            <ActorBiographyComponent\n              name={this.props.actorDetails.name}\n              biography={this.props.actorDetails.biography}\n            />\n            <ActorPhotosComponent\n              photoUrls={(this.props.actorDetails.photos || []).map(\n                (p) => p.file_path\n              )}\n            />\n            <ActorCreditsComponent credits={this.props.actorDetails.credits} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { actorDetails: state.actorReducer.actor };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchActorByID: (actorID) =>\n      ImdbService.fetchActorByID(actorID).then((actorDetails) =>\n        dispatch({\n          type: FETCH_ACTOR,\n          actor: actorDetails,\n        })\n      ),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActorDetailsPage);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport articleService from \"../services/articleService\";\nimport {FETCH_ARTICLE_BY_ID, FETCH_ARTICLES, ON_CHANGE, UPDATE_ARTICLE} from \"../reducers/ReducerTypes\";\nimport \"./ArticleDetail.css\"\n\nclass ArticleDetailsComponent extends React.Component {\n  state = {\n    isAuthor: false,\n    userId: \"\",\n    articleId: \"\",\n    authorId: \"\",\n    editing: false\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.state.articleId = this.props.match.params.articleId;\n    this.props.findArticleById(this.state.articleId)\n      .then(() => {\n        this.state.userId = this.props.match.params.userId;\n        this.setState(prev => ({...prev, authorId: this.props.article.authorId}))\n\n        if (this.props.match.params.userId === this.props.article.authorId) {\n          this.setState({isAuthor: true})\n        }\n      });\n  }\n\n  render() {\n    return <div className=\"inputBox\">\n      <div className=\"sticky-box\">\n        {\n          !this.state.editing && this.state.isAuthor &&\n          <button type=\"button\" className=\"btn btn-success float-left\"\n            //onClick={() => this.props.edit(this.props.article)}>\n                  onClick={() => this.setState({editing: true})}>\n            Edit\n          </button>\n        }\n        {\n          this.state.editing &&\n          <button type=\"button\" className=\"btn btn-primary float-left\"\n                  onClick={() => {\n                    articleService.updateArticle(this.props.article._id, this.props.article)\n                      .then(status => this.setState({editing: false}))\n                  }}>\n            Save\n          </button>\n        }\n      </div>\n      {\n        !this.state.editing &&\n        <h1>{this.props.article.title}</h1>\n      }\n      {\n        !this.state.editing &&\n        <p>{this.props.article.text}</p>\n      }\n      {\n        this.state.editing &&\n        <input className=\"form-control inner-box-margin\" placeholder=\"Please input the article title\"\n          // onChange={(event) =>\n          //     this.setState(preState => ({\n          //     article:{...preState.article, title: event.target.value}\n          // }))}\n               onChange={(event) =>\n                 this.props.updateOnchange({\n                   ...this.props.article,\n                   title: event.target.value\n                 })}\n               value={this.props.article.title}/>\n\n      }\n      {\n        this.state.editing &&\n        <textarea className=\"form-control\" id=\"text-content\" rows=\"20\"\n                  placeholder=\"Please input the article text\"\n                  onChange={(event) =>\n                    this.props.updateOnchange({\n                      ...this.props.article,\n                      text: event.target.value\n                    })}\n                  value={this.props.article.text}>\n                    </textarea>\n      }\n\n    </div>;\n  }\n}\n\nconst stateToPropertyMapper = (state) => ({\n  article: state.articleReducer.article,\n});\n\nconst propertyToDispatchMapper = (dispatch) => ({\n\n  findArticleById: (articleId) => {\n    return articleService.findArticleById(articleId)\n      .then((article) => {\n        dispatch({type: FETCH_ARTICLE_BY_ID, article})\n      });\n  },\n\n  updateOnchange: (article) => dispatch({\n    type: ON_CHANGE,\n    article: article\n  }),\n\n});\n\nexport default connect\n(stateToPropertyMapper, propertyToDispatchMapper)\n(ArticleDetailsComponent);\n","import React from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getPosterFullUrl, IMAGE_SIZE } from \"../services/utils\";\n\nconst placeholderImg = \"http://via.placeholder.com/154x231\";\n\nconst ActorCardComponent = ({ actor }) => {\n  return (\n    <Card className=\"m-0\" border=\"primary\">\n      <Link to={`/actors/${actor.id}`}>\n        <Card.Img\n          variant=\"top\"\n          src={\n            actor.profile_path\n              ? getPosterFullUrl(IMAGE_SIZE.sm, actor.profile_path)\n              : placeholderImg\n          }\n        />\n      </Link>\n      <Card.Body>\n        <Card.Title>{actor.name}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst ActorGridComponent = ({ actors = [] }) => {\n  return (\n    <Container fluid>\n      <Row>\n        {actors.map((actor) => (\n          <Col xl={2} lg={3} md={4} sm={6} xs={12} key={actor.id}>\n            <ActorCardComponent actor={actor} />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ActorGridComponent;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst NUM_SHOWN_ITEMS = 5;\n\nconst generatePaginationItems = (numPages, currentPage) => {\n  let items = [currentPage];\n  let left = currentPage - 1,\n    right = currentPage + 1;\n  while ((left >= 1 || right <= numPages) && items.length < NUM_SHOWN_ITEMS) {\n    if (left >= 1) {\n      items = [left--, ...items];\n    }\n    if (right <= numPages) {\n      items.push(right++);\n    }\n  }\n\n  if (items[0] > 2) {\n    items = [1, \"<<\", ...items];\n  } else if (items[0] === 2) {\n    items = [1, ...items];\n  }\n\n  if (items[items.length - 1] < numPages - 1) {\n    items.push(\">>\", numPages);\n  } else if (items[items.length - 1] === numPages - 1) {\n    items.push(numPages);\n  }\n  console.log(items);\n\n  return items;\n};\n\nconst PaginationComponent = ({ numPages, currentPage, getLinkForPage }) => {\n  return (\n    <Pagination size=\"lg\">\n      {generatePaginationItems(numPages, currentPage).map((p) => {\n        if (p === \"<<\") {\n          return (\n            <li className=\"page-item\">\n              <Link className=\"page-link\" to={getLinkForPage(currentPage - 1)}>\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span className=\"sr-only\">Previous</span>\n              </Link>\n            </li>\n          );\n        } else if (p === \">>\") {\n          return (\n            <li className=\"page-item\">\n              <Link className=\"page-link\" to={getLinkForPage(currentPage + 1)}>\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </Link>\n            </li>\n          );\n        } else {\n          return (\n            <li className={\"page-item\" + (currentPage === p ? \" active\" : \"\")}>\n              <Link className=\"page-link\" to={getLinkForPage(p)}>\n                {p}\n              </Link>\n            </li>\n          );\n        }\n      })}\n    </Pagination>\n  );\n};\n\nexport default PaginationComponent;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport ActorGridComponent from \"../components/ActorGridComponent\";\nimport PaginationComponent from \"../components/PaginationComponent\";\nimport { FETCH_ACTORS } from \"../reducers/ReducerTypes\";\nimport ImdbService from \"../services/ImdbService\";\n\nconst ActorPage = ({ findActorsByName, actors }) => {\n  let ref = useRef({});\n  let location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const name = query.get(\"name\");\n  const page = parseInt(query.get(\"page\") || \"1\");\n  if (ref.current.name !== name || ref.current.page !== page) {\n    findActorsByName(name, page || 1);\n  }\n\n  useEffect(() => {\n    ref.current = { name, page };\n  });\n\n  const getLinkForPage = (page) => {\n    const query = new URLSearchParams(location.search);\n    query.set(\"page\", page);\n    return location.pathname + \"?\" + query.toString();\n  };\n\n  return (\n    <div>\n      <ActorGridComponent actors={actors.results} />\n      <div className=\"d-flex justify-content-center mt-4\">\n        <PaginationComponent\n          numPages={actors.total_pages}\n          currentPage={page || 1}\n          getLinkForPage={(page) => getLinkForPage(page)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { actors: state.actorReducer.actors };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    findActorsByName: (keyword, page) =>\n      ImdbService.findActorsByName(keyword, page).then((actors) =>\n        dispatch({\n          type: FETCH_ACTORS,\n          actors,\n        })\n      ),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActorPage);\n","import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Link, Router, Route, Switch} from \"react-router-dom\";\nimport NavbarComponent from \"./components/NavbarComponent\";\nimport MovieListComponent from \"./components/MovieListComponent\";\nimport RegistrationForm from \"./components/Login/RegistrationForm/RegistrationForm\";\nimport AlertComponent from \"./components/Login/AlertComponent/AlertComponent\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport UserProfile from \"./components/UserHomePage\";\nimport LoginForm from \"./components/Login/LoginForm/LoginForm\";\nimport {createBrowserHistory} from \"history\";\nimport MoviePageContainer from \"./containers/MoviePageContainer\";\nimport MovieDetailsPage from \"./containers/movie-details/MovieDetailsPage\";\nimport ActorDetailsPage from \"./containers/actor-details/ActorDetailsPage\";\nimport axios from \"axios\";\nimport {ACCESS_TOKEN_NAME, API_BASE_URL} from \"./constants/ApiConstants\";\nimport ArticlePageContainer from \"./containers/ArticlePageContainer\"\nimport ArticleDetailsComponent from \"./containers/ArticleDetails\"\nimport ActorPageContainer from './containers/ActorPageContainer';\n\nfunction App() {\n  const [title, updateTitle] = useState(null)\n  const [errorMessage, updateErrorMessage] = useState(null)\n  const [user, setUser] = useState({username: '1'});\n\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/users/me', {headers: {'token': localStorage.getItem(ACCESS_TOKEN_NAME)}})\n      .then(function (response) {\n        if (response.status == 200) {\n          setUser(response.data)\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavbarComponent/>\n        {/*<MovieListComponent/>*/}\n        <div className=\"container-fluid d-flex align-items-center flex-column\">\n          {/*<Router history={createBrowserHistory()}>*/}\n          <Switch>\n            <Route path={[\"/\"]} exact component={MoviePageContainer}/>\n            <Route path={[\"/movies\"]} exact component={MoviePageContainer}/>\n            <Route path={\"/movies/:movieID\"} exact render={(props) => <MovieDetailsPage {...props} curUser={user}/>}/>\n\n            <Route path={\"/actors/:actorID\"} exact component={ActorDetailsPage} />\n            <Route path={\"/actors\"} exact component={ActorPageContainer} />\n\n            <Route path={\"/articles\"} exact component={ArticlePageContainer}/>\n            <Route path={\"/:userId/articles\"} exact component={ArticlePageContainer}/>\n            <Route path={\"/articles/:articleId\"} exact component={ArticleDetailsComponent}/>\n            <Route path={\"/:userId/articles/:articleId\"} exact component={ArticleDetailsComponent}/>\n\n            <Route path=\"/register\">\n              <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <UserProfile/>\n            </PrivateRoute>\n            <Route path=\"/users/:userId\">\n              <UserProfile/>\n            </Route>\n          </Switch>\n          {/*</Router>*/}\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReducerTypes from \"./ReducerTypes\";\n\nconst initialState = {}\n\nconst NavBarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ReducerTypes.SEARCH_KEYWORD:\n      return {\n        ...state,\n        keyword: action.keyword\n      }\n    case ReducerTypes.TYPE_KEYWORD:\n      return {\n        ...state,\n        keyword: action.keyword\n      }\n\n    case ReducerTypes.GET_LOGIN_USER:\n      return {\n        ...state, loginUser: action.loginUser\n      }\n    case ReducerTypes.UPDATE_SEARCH_TYPE:\n      return {\n        ...state,\n        searchType: action.searchType\n      }\n    default:\n      return state;\n  }\n}\n\nexport default NavBarReducer\n","import ReducerTypes from \"./ReducerTypes\";\n\nconst initialState = {\n  movies: [],\n  movie: {}\n}\n\nconst MovieReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ReducerTypes.SEARCH_KEYWORD:\n      return {\n        ...state,\n        keyword: action.keyword\n      }\n    case ReducerTypes.TYPE_KEYWORD:\n      return {\n        ...state,\n        keyword: action.keyword\n      }\n    case ReducerTypes.FIND_MOVIES_BY_TITLE:\n      return {\n        ...state,\n        movies: action.movies\n      }\n    case ReducerTypes.FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.movies\n      }\n    case ReducerTypes.FETCH_MOVIE:\n      return {\n        ...state,\n        movie: action.movie\n      }\n    default:\n      return state;\n  }\n}\n\nexport default MovieReducer","import {FIND_ARTICLES_BY_KEYWORD, FETCH_ARTICLES, FETCH_ARTICLE,\n    FETCH_ARTICLES_BY_AUTHOR, FETCH_ARTICLE_BY_ID,\n    ADD_ARTICLE, UPDATE_ARTICLE, DELETE_ARTICLE, ON_CHANGE} from \"./ReducerTypes\";\n\nconst initialState = {\n    articles: [],\n    article: {}\n}\n\nconst ArticleReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FIND_ARTICLES_BY_KEYWORD:\n            console.log(\"FIND_ARTICLES_BY_KEYWORD\");\n\n            return {\n                ...state,\n                articles: action.articles\n            }\n        case FETCH_ARTICLES:\n            console.log(\"FETCH_ARTICLES\");\n            return {\n                ...state,\n                articles: action.articles\n            }\n\n        case FETCH_ARTICLES_BY_AUTHOR:\n            console.log(\"FETCH_ARTICLES_BY_AUTHOR\");\n\n            return {\n                ...state,\n                articles: action.articles\n            }\n        case FETCH_ARTICLE_BY_ID:\n            console.log(\"FETCH_ARTICLE_BY_ID\");\n\n            return {\n                ...state,\n                article: action.article\n            }\n        case DELETE_ARTICLE:\n            console.log(\"DELETE_ARTICLE\");\n\n            return {\n                ...state,\n                articles: state.articles.filter(article => article._id !== action.articleId)\n            }\n        case UPDATE_ARTICLE:\n            //console.log(action.article.editing);\n            console.log(\"UPDATE_ARTICLE\");\n\n            return {\n                ...state,\n                articles: state.articles.map(\n                    article => article._id === action.article._id ?\n                        action.article : article)\n            }\n        case ON_CHANGE:\n            console.log(\"ON_CHANGE\");\n\n            return {\n                ...state,\n                article: action.article\n            }\n        case ADD_ARTICLE:\n            console.log(\"ADD_ARTICLE\");\n\n            return {\n                ...state,\n                articles: [\n                    ...state.articles,\n                    action.article\n                ]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default ArticleReducer\n\n","import ReducerTypes from \"./ReducerTypes\";\n\nconst initialState = {\n  actor: {},\n  actors: [],\n};\n\nconst ActorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ReducerTypes.FETCH_ACTOR:\n      return {\n        ...state,\n        actor: action.actor,\n      };\n    case ReducerTypes.FETCH_ACTORS:\n      return {\n        ...state,\n        actors: action.actors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ActorReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootswatch/dist/minty/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\"\n\nimport navBarReducer from \"./reducers/NavbarReducer\";\nimport movieReducer from \"./reducers/MovieReducer\"\nimport articleReducer from \"./reducers/ArticleReducer\"\nimport actorReducer from \"./reducers/ActorReducer\";\n\nconst reducers = combineReducers({navBarReducer, movieReducer, articleReducer, actorReducer})\nconst store = createStore(reducers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}